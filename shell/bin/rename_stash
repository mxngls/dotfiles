#!/bin/bash

# Function to rename a Git stash
# see also https://stackoverflow.com/questions/25931026/how-can-i-rename-a-git-stash/65627640#65627640
# Parameters:
#   $1: The index of the stash to rename
#   $2: The new name for the stash

set -euf

declare stash_index=${1:-}
declare new_stash_name=${2:-}
declare stashes_total
declare stash_info
declare new_commit_hash
declare tree
declare parents

stashes_total=$(($(git stash list | wc -l) - 1))

# Validate user input
if [[ -z "$stash_index" ]] || [[ -z "$new_stash_name" ]]; then
  echo "Invalid input: Both the stash index and a new stash name are required."
  exit 1
elif [[ $stash_index =~ [^0-9]+ ]]; then
  echo "Invalid input: Specifed index is not a number."
  exit 1
elif [[ "$stashes_total" -le 1 ]]; then
  echo "Invalid Input: No stashes found."
  exit 1
elif [[ "$stash_index" -gt "$stashes_total" ]] ||
  [[ "$stash_index" -lt 0 ]]; then
  echo "Invalid input: No stash with the specifed index exists."
  exit 1
fi

stash_info="$(
  git show \
    --no-patch \
    --pretty=format:"%T %P" \
    "stash@{$stash_index}" |
    sed -e 's/ / -p /g'
)"

tree=$(cut -d ' ' -f 1 <<< "$stash_info")
parents=$(cut -d ' ' -f 2- <<< "$stash_info")

# Get the commit for our new stash
# ('$parents' is intentionally not quoted to allow expansion on whitespace)
new_commit_hash="$(git commit-tree $parents -m "$new_stash_name" "$tree")"

# Drop the old stash
git stash drop --quiet "stash@{$stash_index}"

# Create a new one in its place
git stash store \
  -m "$(git show -s --format=%B "$new_commit_hash")" \
  --quiet \
  "$new_commit_hash"

echo "Renamed stash@{$stash_index} to '$new_stash_name'"

exit 0
